// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Existing User and Auth models - preserved
model User {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  phone           String    @unique
  passwordHash    String?
  isAffiliate     Boolean   @default(false)
  address         String?   @db.Text
  city            String?
  state           String?
  pincode         String?
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  otpVerification OtpVerification?
}

model OtpVerification {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// New models based on the database plan
model Category {
  id          Int       @id @default(autoincrement())
  parentId    Int?
  name        String
  slug        String    @unique
  description String?   @db.Text
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Self-relation for hierarchical categories
  parent      Category? @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: SetNull)
  subcategories Category[] @relation("CategoryHierarchy")
  
  // Relation to products
  products    Product[]
}

model Vendor {
  id          Int       @id @default(autoincrement())
  vendorCode  String    @unique
  name        String
  email       String?
  phone       String?
  website     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  products    Product[]
}

model Product {
  id              Int       @id @default(autoincrement())
  name            String
  description     String?   @db.Text
  basePrice       Decimal   @db.Decimal(10, 2)
  slug            String    @unique
  isFeatured      Boolean   @default(false)
  vendorId        Int?
  originalUrl     String?   @db.Text
  metaTitle       String?
  metaDescription String?   @db.Text
  categoryId      Int
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  category        Category  @relation(fields: [categoryId], references: [id])
  vendor          Vendor?   @relation(fields: [vendorId], references: [id])
  variants        ProductVariant[]
  images          ProductImage[]
  attributeValues ProductAttributeValue[]
}

model ProductVariant {
  id               Int       @id @default(autoincrement())
  productId        Int
  size             String?
  colorCode        String?
  priceAdjustment  Decimal   @default(0) @db.Decimal(10, 2)
  inStock          Boolean   @default(true)
  sku              String    @unique
  quantity         Int       @default(10)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  // Relations
  product          Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  images           ProductImage[]
}

model ProductImage {
  id          Int       @id @default(autoincrement())
  productId   Int
  variantId   Int?
  imgUrl      String    @db.Text
  altText     String?
  createdAt   DateTime  @default(now())
  
  // Relations
  product     Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  variant     ProductVariant? @relation(fields: [variantId], references: [id], onDelete: SetNull)
}

model ProductAttribute {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  // Relations
  attributeValues ProductAttributeValue[]
}

model ProductAttributeValue {
  id            Int       @id @default(autoincrement())
  productId     Int
  attributeId   Int
  value         String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  product       Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  attribute     ProductAttribute @relation(fields: [attributeId], references: [id], onDelete: Cascade)
}
